{"ast":null,"code":"var _jsxFileName = \"/Users/Wenjin/Desktop/3:30 Curriculum/Complete React Developer in 2020 (w:Redux, Hooks, GraphQL)/crwn-clothing/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.action';\nimport { selectIsCollectionFetching } from '../../redux/shop/shop.selectors';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport CollectionPage from '../Collection/collection.component';\nimport CollectionOverview from '../../components/collection-overview/collection-overview.component';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const {\n      match,\n      isCollectionFetching\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionOverviewWithSpinner, Object.assign({\n        isLoading: isCollectionFetching\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 64\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: isCollectionFetching\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 71\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/Wenjin/Desktop/3:30 Curriculum/Complete React Developer in 2020 (w:Redux, Hooks, GraphQL)/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","createStructuredSelector","connect","fetchCollectionsStartAsync","selectIsCollectionFetching","WithSpinner","CollectionPage","CollectionOverview","firestore","convertCollectionsSnapshotToMap","CollectionOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","props","render","match","isCollectionFetching","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAAQC,KAAR,QAAoB,kBAApB;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,0BAAR,QAAyC,8BAAzC;AACA,SAAQC,0BAAR,QAAyC,iCAAzC;AAGA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,OAAOC,kBAAP,MAA+B,oEAA/B;AAEA,SAAQC,SAAR,EAAmBC,+BAAnB,QAAyD,+BAAzD;AAEA,MAAMC,6BAA6B,GAAGL,WAAW,CAACE,kBAAD,CAAjD;AACA,MAAMI,yBAAyB,GAAGN,WAAW,CAACC,cAAD,CAA7C;;AAGA,MAAMM,QAAN,SAAuBb,KAAK,CAACc,SAA7B,CAAuC;AAErCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAACX,MAAAA;AAAD,QAA+B,KAAKY,KAA1C;AACAZ,IAAAA,0BAA0B;AAC3B;;AAGDa,EAAAA,MAAM,GAAG;AACP,UAAM;AAACC,MAAAA,KAAD;AAAQC,MAAAA;AAAR,QAAgC,KAAKH,KAA3C;AAEA,wBACA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAI,GAAEE,KAAK,CAACE,IAAK,EAAlC;AAAqC,MAAA,MAAM,EAAGJ,KAAD,iBAAU,oBAAC,6BAAD;AAA+B,QAAA,SAAS,EAAEG;AAA1C,SAAmEH,KAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACE,IAAK,gBAA3B;AAA4C,MAAA,MAAM,EAAGJ,KAAD,iBAAU,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEG;AAAtC,SAA+DH,KAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADA;AAMD;;AAjBoC;;AAoBvC,MAAMK,eAAe,GAAGnB,wBAAwB,CAAC;AAC/CiB,EAAAA,oBAAoB,EAAEd;AADyB,CAAD,CAAhD;;AAIA,MAAMiB,kBAAkB,GAAGC,QAAQ,KAAK;AACtCnB,EAAAA,0BAA0B,EAAE,MAAKmB,QAAQ,CAACnB,0BAA0B,EAA3B;AADH,CAAL,CAAnC;;AAKA,eAAeD,OAAO,CAAE,IAAF,EAAQmB,kBAAR,CAAP,CAAmCT,QAAnC,CAAf","sourcesContent":["import React from 'react';\n\nimport {Route} from 'react-router-dom';\nimport {createStructuredSelector} from 'reselect';\nimport {connect} from 'react-redux'\nimport {fetchCollectionsStartAsync} from '../../redux/shop/shop.action';\nimport {selectIsCollectionFetching} from '../../redux/shop/shop.selectors';\n\n\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\n\nimport CollectionPage from '../Collection/collection.component'\nimport CollectionOverview from '../../components/collection-overview/collection-overview.component';\n\nimport {firestore, convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils'\n\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\n\nclass ShopPage extends React.Component {\n\n  componentDidMount() {\n    const {fetchCollectionsStartAsync} = this.props;\n    fetchCollectionsStartAsync();\n  }\n  \n\n  render() {\n    const {match, isCollectionFetching} = this.props;\n    \n    return (\n    <div className='shop-page'> \n        <Route exact path ={`${match.path}`} render={(props)=> <CollectionOverviewWithSpinner isLoading={isCollectionFetching}{...props}/>}/>  \n        <Route path={`${match.path}/:collectionId`} render={(props)=> <CollectionPageWithSpinner isLoading={isCollectionFetching}{...props}/>}/>  \n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching\n})\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: ()=> dispatch(fetchCollectionsStartAsync())\n})\n\n\nexport default connect (null, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}