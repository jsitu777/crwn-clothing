{"ast":null,"code":"import { takeLatest, call, put } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.action';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}\nexport function* shopSagas() {\n  yield all([call(fetchCollectionsStart)]);\n}","map":{"version":3,"sources":["/Users/Wenjin/Desktop/3:30 Curriculum/Complete React Developer in 2020 (w:Redux, Hooks, GraphQL)/crwn-clothing/src/redux/shop/shop.sagas.js"],"names":["takeLatest","call","put","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","fetchCollectionsAsync","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START","shopSagas","all"],"mappings":"AAAA,SAAQA,UAAR,EAAmBC,IAAnB,EAAwBC,GAAxB,QAAkC,oBAAlC;AAEA,SAAQC,SAAR,EAAmBC,+BAAnB,QAAyD,+BAAzD;AAEA,SAAQC,uBAAR,EAAgCC,uBAAhC,QAA8D,eAA9D;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACrC,MAAI;AACJ,UAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMZ,IAAI,CAC7BG,+BAD6B,EAE7BO,QAF6B,CAAjC;AAIA,UAAMT,GAAG,CAACG,uBAAuB,CAACQ,cAAD,CAAxB,CAAT;AACC,GARD,CAQE,OAAOC,KAAP,EAAc;AACZ,UAAMZ,GAAG,CAACI,uBAAuB,CAACQ,KAAK,CAACC,OAAP,CAAxB,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMhB,UAAU,CACZO,eAAe,CAACU,uBADJ,EAEZT,qBAFY,CAAhB;AAIH;AAED,OAAO,UAAUU,SAAV,GAAsB;AACzB,QAAMC,GAAG,CAAC,CAAClB,IAAI,CAACe,qBAAD,CAAL,CAAD,CAAT;AACH","sourcesContent":["import {takeLatest,call,put} from 'redux-saga/effects';\n\nimport {firestore, convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils'\n\nimport {fetchCollectionsSuccess,fetchCollectionsFailure} from './shop.action'\n\nimport ShopActionTypes from './shop.types';\n\nexport function* fetchCollectionsAsync() {\n    try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(\n        convertCollectionsSnapshotToMap,\n        snapshot\n    );\n    yield put(fetchCollectionsSuccess(collectionsMap));\n    } catch (error) {\n        yield put(fetchCollectionsFailure(error.message));\n    }\n}\n\nexport function* fetchCollectionsStart() {\n    yield takeLatest(\n        ShopActionTypes.FETCH_COLLECTIONS_START,\n        fetchCollectionsAsync\n    );\n}\n\nexport function* shopSagas() {\n    yield all([call(fetchCollectionsStart)])\n}"]},"metadata":{},"sourceType":"module"}